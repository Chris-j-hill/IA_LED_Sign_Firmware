Word,Count
*,3072
the,1561
to,1043
,856
for,806
of,699
is,670
=,524
if,516
a,493
and,406
file,325
in,312
//,309
value,305
------------------------------------------------------------------------------,295
\param[in],294
be,286
or,278
The,262
},247
\return,245
int,243
directory,220
{,217
not,199
set,196
byte,188
data,184
by,182
Library,163
it,160
-,154
This,148
on,148
function,139
with,135
return,124
error,121
card,120
stream,120
Arduino,119
as,118
this,117
will,117
number,116
string,113
==,110
returned,110
an,107
Public,105
GNU,105
current,105
License,105
General,105
send,105
bool,104
use,104
entry,103
frame,102
block,102
SdFat,102
that,100
read,100
are,99
should,96
from,91
pin,90
failure,90
+,89
SD,89
2,87
0;,84
false;,84
write,82
interrupt,81
name,80
else,80
version,80
A,80
all,80
If,80
open,77
success,75
FAT,74
SPI,73
used,73
bytes,72
serial,70
mode,68
0,67
**,66
can,65
true,65
code,65
false,64
cluster,64
field,63
1,63
&&,62
loop,61
part,61
any,60
true;,60
See,60
at,59
one,58
0),58
\true,\,57
volume,56
first,56
\a,55
when,55
copy,55
\zero,\,55
new,54
free,54
have,54
but,54
size,53
timer,53
end,52
position,52
path,51
Set,51
must,51
cache,51
more,51
3,51
you,50
!=,50
start,50
\false,\,50
sensor,49
output,48
class,48
functions,48
time,48
\one,\,47
zero,47
\brief,46
offset],46
Software,46
type,46
without,45
do,45
*this,45
date,44
speed,43
address,43
length,43
details,42
flags,42
str,42
working,42
modify,42
initialise,41
\param[out],41
last,41
character,40
state,40
see,40
led,40
call,40
bit,40
than,40
after,39
pos,39
and/or,39
always,39
arg,39
later,39
values,39
NOLINT,39
check,39
cards,38
valid,38
You,38
received,38
flash,38
fail,38
(fail,37
along,37
even,37
either,37
next,36
\not,\,36
\useful,\,36
sd,36
under,36
struct,36
based,36
offset,35
\Foundation,\,35
MERCHANTABILITY,35
ANY,35
terms,35
PARTICULAR,35
WARRANTY;,35
WITHOUT,35
<http://www.gnu.org/licenses/>,35
network,35
distributed,35
redistribute,35
\License,\,35
hope,35
Copyright,35
no,35
published,35
Free,35
software:,35
PURPOSE,35
implied,35
only,35
FAT32,35
(C),35
FITNESS,35
warranty,35
FOR,35
#define,34
buffer,34
/,34
get,34
make,34
manipulator,33
case,33
reading,33
William,33
while,33
Greiman,33
(at,33
Print,33
const,32
your,32
8.3,32
rate,32
option),32
root,32
dir,31
access,31
init,31
text,31
wait,31
characters,31
has,31
object,31
level,31
multiple,31
format,31
using,30
files,30
location,30
until,30
char,30
store,29
<,29
blocks,29
2012,29
strip,29
written,29
megas,29
bits,28
so,28
library,28
//if,28
otherwise,27
indicated,27
due,27
print,27
receive,27
(0);,26
stored,26
----------------------------------------------------------------------------,26
display,26
i2c,26
i,26
pointer,26
input,26
range,25
called,25
==============================================================================,25
alpha,25
returns,25
create,25
may,25
into,25
break;,25
%Print,25
partition,25
count,25
device,25
variables,25
For,25
1;,24
default,24
//function,24
#include,24
oflag,24
both,24
sure,24
Sd2Card,24
(byte),24
sector,24
frame.frame_buffer[4,23
subdirectory,23
debug,23
attach,23
I/O,23
sensor_prefix;,23
@param[in],23
where,23
update,23
between,23
FAT16,23
file's,22
target,22
(int,22
then,22
frame.frame_buffer[5,22
which,21
need,21
Extract,21
opened,21
Internal,21
other,20
software,20
Output,20
Failure,20
nonzero,20
already,20
Is,20
8,20
5,20
user,20
Pointer,20
include,20
void,20
specified,20
temperature,20
been,20
DOS,19
boot,19
list,19
attached,19
Use,19
enable,19
pins,19
\class,19
long,19
fan,19
high,19
frames,19
frequency,18
before,18
\ref,18
up,18
old,18
pack,18
10,18
erase,18
de,18
test,18
array,18
4,18
mega,17
inclusive,17
memory,17
button,17
max,17
512,17
stop,17
fixed,17
encoder,17
fill,17
register,16
select,16
256,16
period,16
temp,16
external,16
we,16
open(),16
info,16
entries,16
\Sprintln(F("\Failed\,16
useful,16
sync(),16
dirFile,16
-1,16
fade,16
chip,16
ISR,16
occurs,16
formatted,16
screen,16
increment,16
FAT12,16
sent,16
information,15
instance,15
contains,15
volume's,15
variable,15
beta,15
soft_uart,15
stopping,15
clusters,15
15,15
cursor,15
off,15
:,15
cached,15
brightness,15
each,15
internal,15
\file,15
//attach,15
\note,15
change,15
Reasons,15
index,15
6,15
13,15
was,14
define,14
n,14
\Sprintln("\"\);\,14
12,14
OR,14
16,14
Open,14
checksum,14
its,14
SCK,14
};,14
indicate,14
fans,14
defined,14
empty,14
initial,14
(-1);,14
flag,13
space,13
'..',13
sectors,13
disable,13
7,13
millis();,13
dont,13
through,13
single,13
An,13
\"\));\,13
menu,13
two,13
normal,13
second,13
failed,13
\deprecated,13
//set,13
back,13
containing,13
convert,13
sequence,13
short,13
specific,13
over,13
y,12
writing,12
strings,12
some,12
created,12
\Sprintln(F("\\t\,12
port's,12
recieved,12
--------------------------------------------------------------------------------,12
external_sd_card,12
sign_coms::stop();,12
clock,12
width,12
sending,12
115200,12
system,12
just,12
errors,12
\Sprintln(F("\Initialised\,12
interval,12
status,12
%SdFat,12
MSB,12
\timer"\));\,12
internal_sd_card,12
SDHC,12
related,12
humidity,12
seconds,12
Initialize,12
|,12
exit,12
does,12
out,12
non,12
Use:,12
\execution..."\));\,12
freq,11
parity,11
response,11
pr,11
toggle,11
delete,11
uint8_t,11
handle,11
TX,11
seek,11
%,11
prompt,11
maybe,11
operation,11
Used,11
9,11
skip,11
fields,11
\Sprintln(F("\Initialising\,11
clean,11
low,11
(alpha,11
command,11
coordinate,11
add,11
extracted,11
parent,11
\value,\,11
volumes,11
less,11
greater,11
\struct,11
baud,11
available,11
password,10
Values,10
modulo,10
USE_SD_CRC,10
folder,10
Legal,10
standard,10
DueTimer,10
take,10
fifo,10
minimum,10
don't,10
interrupts,10
SdVolume,10
could,10
return(-1);,10
close,10
BIOS,10
@cond,10
@endcond,10
256;,10
>,10
raw,10
deleted,10
read-only,10
shift,10
bus,10
write(),10
specify,10
required,10
Constructor,10
same,10
SHOW_PROTECTED,10
11,10
14,10
HIGH);,10
||,10
prefix,10
#endif,10
LS,10
Write,10
{},10
main,10
allow,10
iostate,10
\directory,\,10
way,10
hardware,10
MS,10
dot,10
\Sprintln(F("\From\,10
Boot,10
media,10
MBR,10
static,10
1),9
chain,9
constructed,9
halt,9
followed,9
\pin,\,9
\enabled,\,9
address),9
//indicate,9
maximum,9
(debug),9
most,9
reception,9
these,9
\digitalWrite(notifier,\,9
True,9
timestamps,9
Data,9
LSB,9
storage,9
assume,9
20K,9
FIFO,9
timeout,9
bitwise-inclusive,9
Microsoft,9
starting,9
program,9
approach,9
large,9
//stop,9
pullup,9
classes,9
delay,9
structure,9
x,9
OUTPUT);,9
Valid,9
methods,9
done,9
initialize,9
unsigned,9
find,9
callback,9
Number,9
16-bit,9
structures,9
Bits,9
total,9
Only,9
NOTE:,9
pin's,9
etc,9
sinusoidal,9
\brightness,\,8
left,8
Shield,8
reset,8
considered,8
calculate,8
spiRate,8
element,8
writes,8
timers,8
search,8
full,8
(accept_val,8
stdOut,8
multiples,8
Directory,8
ambient,8
hue,8
constructor,8
num,8
Message,8
given,8
macro,8
implementation,8
(eg,8
limit,8
PC,8
fails,8
\data,\,8
DMA,8
copied,8
__AVR__,8
(debug){,8
relative,8
associated,8
date/time,8
SdFile,8
terminator,8
cant,8
option,8
configuration,8
exists,8
relevant,8
//send,8
external_sd_card_initialised,8
(millis(),8
//take,8
mask,8
Format,8
DHT11,8
'.',8
per,8
detected,8
removed,8
C,8
ready,8
occurred,8
invalid,8
writeError,8
msg,8
go,8
names,8
force,8
&,8
Create,8
18,8
run,8
Read,8
Return,8
isr,8
like,7
identify,7
work,7
->,7
global,7
Connected,7
there,7
//wait,7
light,7
push,7
table,7
flush,7
128,7
allowed,7
end-of-file,7
significant,7
D7,7
leds,7
many,7
ALLOW_DEPRECATED_FUNCTIONS,7
17,7
support,7
subdirectories,7
//code,7
30,7
token,7
Sector,7
reached,7
decimal,7
Windows,7
Type,7
setting,7
delim,7
extract,7
save,7
\"\Due.h"\\,7
packed,7
calls,7
interpret,7
delay(200);,7
performance,7
i++),7
INPUT);,7
possible,7
uses,7
\file,\,7
pressed,7
sets,7
23,7
Get,7
message,7
#if,7
19,7
\section,7
something,7
since,7
truncate,7
//loop,7
Time,7
\volumes,\,7
exist,7
volatile,7
1],7
clear,7
28,7
LOW);,7
addresses,7
B5,7
defines,7
supports,7
\0,\,7
responds,7
changed,7
4;,7
32,7
Arduinos,7
\"\Due_Libraries.h"\\,7
\Sprintln("\\t\,7
B4,7
their,7
GPS,7
>=,7
LDR_check_value:,7
four,7
<=,7
(ie,7
correct,7
colon,7
messages,6
contents,6
D6,6
!=0){,6
ch,6
recieve,6
D0,6
correctly,6
RAM,6
\length,\,6
//not,6
(pin),6
streams,6
LDR.LDR2_enable,6
positions,6
complete,6
try,6
theta,6
return(0);,6
precision,6
programmed,6
instruction,6
2),6
also,6
DESTRUCTOR_CLOSES_FILE,6
2;,6
\t,6
transmision,6
B3,6
#ifndef,6
argument,6
24,6
can't,6
custom,6
setfill,6
sckRateID,6
(digitalRead,6
D1,6
year,6
ios::out,6
D3,6
accept_val,6
CSD,6
\bytes,\,6
avoid,6
2015,6
buf,6
timers.led_strip_timer_attached,6
absolute,6
value:,6
Canaria,6
Product,6
sensor);,6
B1,6
Palmas,6
ignore,6
ARM,6
setprecision,6
Adafruit,6
Count,6
ms,6
<adominguez@iusiani.ulpgc.es>,6
Soft,6
______,6
File,6
board,6
Test,6
B0,6
B6,6
give,6
EOC,6
negative,6
disparity,6
readings,6
currently,6
example,6
connected,6
RX,6
objects,6
systems,6
Date,6
O_EXCL,6
Mega,6
contiguous,6
@return,6
Master,6
disks,6
USE_MULTIPLE_CARDS,6
50,6
\Sprint(F("\LDR\,6
overflow,6
DigitalIO,6
31,6
FSINFO,6
-100;,6
\string,\,6
SdFat::init(),6
label,6
incrementing,6
conditions,6
TO,6
20,6
setw,6
alpha++;,6
Extracted,6
\set,\,6
Universidad,6
drive,6
once,6
shall,6
small,6
Gran,6
now,6
\target,\,6
Las,6
remember,6
protocol,6
three,6
\byte,\,6
word,6
address);,6
D4,6
27,6
//check,6
\msg,\,6
Usually,6
O_CREAT,6
place,6
implented,6
month,6
USE_SEPARATE_FAT_CACHE,6
frame.checksum,6
contain,6
2013,6
B2,6
Antonio,6
SOFTWARE_SPI,6
includes,6
operating,6
calling,6
keyword,6
D2,6
enabled,6
physical,6
frame.frame_buffer[0],6
determine,6
29,6
starts,6
0x13,6
fast,6
SdBaseFile,6
-1;,5
minute,5
group,5
card's,5
switch,5
O_SYNC,5
\only,\,5
Start,5
frame.frame_buffer[3],5
__arm__,5
slow,5
nbyte,5
delay(500);,5
//display,5
fatDate,5
21,5
C6,5
C7,5
\card,\,5
'\\n',5
CR,5
\code,\,5
Remove,5
fatTime,5
ls(),5
equals,5
\quits,\,5
limited,5
Default,5
frame.frame_buffer[0];,5
look,5
average,5
configure,5
soft,5
floppy,5
attribute,5
val,5
Serial.read();,5
checking,5
\endlink,5
frame.frame_buffer[1],5
25,5
Current,5
sync,5
DMAC,5
os,5
Mbit/sec,5
signature,5
B7,5
reference,5
best,5
MISO,5
\1,\,5
directories,5
y_pos_MSB,5
SPI_USE_8BIT_FRAME,5
O_WRITE,5
adjust,5
pf,5
@brief,5
supported,5
alpha++),5
\mode,\,5
signed,5
inserted,5
PROGMEM,5
High,5
Serial.flush();,5
disabled,5
SS,5
about,5
Fast,5
positive,5
led_strip.current_brightness,5
reading2),5
down,5
Not,5
Must,5
USE_SAM3X_DMAC,5
area,5
base,5
trigger,5
neither,5
located,5
known,5
\header,\,5
22,5
frame.frame_buffer[2],5
'x'),5
Do,5
including,5
move,5
round,5
iteration,5
changing,5
x_pos_MSB,5
\(pin,\,5
amps,5
identified,5
CRC,5
extension,5
button.button_pin,5
Sd2Card::setSckRate(),5
regardless,5
(Serial.available(),5
startup,5
Card,5
side,5
float,5
\Sprint(F("\Set\,5
double,5
Stream,5
waiting,5
parse,5
needed,5
private,5
It,5
insure,5
AVR,5
arrives,5
SDFormatter,5
bad,5
c,5
\position,\,5
reserved,5
\exists,\,5
transfer,5
5;,5
see:,5
rest,5
such,5
initialised,5
creation,5
Logical,5
//create,5
coordinates,5
\link,5
Text,5
Pin,5
ofstream,5
--,5
signal,5
super,5
initialization,5
overhead,5
ios::in,5
well,5
3;,4
would,4
rx,4
newPath,4
\soft_uart::data_bit_codes::EIGHT_BITS,\,4
adjusted,4
disk,4
F5,4
pinMode,4
form,4
C4,4
slot,4
desired,4
term,4
\loop,\,4
\valid,\,4
/SIGN1,4
wire_write_frame(address);,4
KY-040,4
\written,\,4
modified,4
//initialise,4
\full,\,4
//increment,4
happened,4
attempt,4
obufstream,4
modification,4
ibufstream,4
sensors,4
(reading1,4
type;,4
selected,4
sign,4
\open,\,4
mark,4
123456789,4
timers.pos_timer_attached,4
RC,4
Enable,4
auto&,4
DO:,4
want,4
C0,4
dummy,4
transmission,4
text_cursor.y,4
scan,4
CRC-CCITT,4
\opened,\,4
copies,4
fl,4
*<,4
longer,4
devices,4
below,4
(flash,4
D5,4
(!timers.pos_timer_attached){,4
Manufacturing,4
https://github.com/ivanseidel/DueTimer,4
pin),4
\elapsed,\,4
pin);,4
LDR_enabled,4
text_cursor.x,4
power,4
\"\Instructions.BIN"\;\,4
ethernet_enabled,4
process,4
LS_R,4
ostream,4
initialising,4
eof,4
blockNumber,4
preceding,4
ldr's,4
\1"\));\,4
beginning,4
past,4
//const,4
cover,4
\ends,\,4
getWriteError,4
Most,4
F0,4
means,4
port,4
++),4
CPU,4
C++,4
negaitve,4
moving,4
dev,4
Short,4
26,4
LS_DATE,4
F1,4
\"\bitmap.BIN"\;\,4
timers.fan_timer_attached,4
printed,4
friend,4
resistor,4
*Print,4
allows,4
\frames,\,4
pulled,4
/int_dir/int_file,4
decive,4
comment,4
memory),4
LDR.LDR1_enable,4
seperate,4
transmit,4
encoder_enabled,4
/ext_dir/ext_file,4
\objects,\,4
Sprint,4
hour,4
actually,4
extern,4
null,4
tab,4
analog,4
fmtflags,4
Possible,4
Due,4
host,4
300,4
nothing,4
\name,\,4
LF,4
Truncate,4
line,4
init_i2c_due();,4
32-bit,4
ISR_attached,4
above,4
tx,4
Channel,4
prevent,4
C1,4
notification,4
Store,4
prior,4
instead,4
(address,4
sucessfully,4
Standard,4
C3,4
str_len,4
\file"\);\,4
mirrored,4
string_length();,4
June,4
led_strip_enabled,4
analogRead(LDR.pin1);,4
ios::app,4
id,4
file),4
definition,4
detached,4
slower,4
LDR.large_disparity),4
F7,4
38400,4
wifi_enabled,4
F6,4
analogRead(LDR.pin2);,4
\removed,\,4
frame.frame_buffer[pos_frame_length,4
read_temp_data,4
\due,\,4
good,4
\Serial.print(F("\Failed\,4
compatibility,4
\O_TRUNC,\,4
/SIGN2,4
);,4
digit,4
day,4
dir_t,4
ArduinoOutStream,4
sd_cards_enabled,4
0xF0,4
drives,4
;,4
Close,4
\Serial.println(F("\Attached\,4
calculates,4
\SOFT_UART_BIT_RATE,\,4
0XAA,4
carrige,4
DEC);,4
Recursive,4
80us,4
F4,4
Sd2Card::init(),4
\address,\,4
(temp.dat1,4
List,4
Clear,4
delayMicroseconds,4
soft_uart::stop_bit_codes::ONE_STOP_BIT,4
revision,4
Location,4
LS_SIZE,4
MCK,4
\sent,\,4
pushed,4
newValue);,4
char*,4
NT,4
verify,4
CID,4
numbers,4
accept,4
more_bytes,4
C5,4
here,4
fgets(),4
current_meter_enabled,4
CR/LF,4
\soft_uart::parity_codes::NO_PARITY,\,4
thrown,4
_______,4
removable,4
identifiable,4
causes,4
control,4
(LDR.LDR1_enable,4
larger,4
Reserved,4
\dirFile,\,4
modes,4
iostream,4
ldr,4
stuff,4
finding,4
coms,4
temp_sensor_enabled,4
\reached,\,4
streamsize,4
implement,4
Serial.print,4
doesnt,4
statements,4
(1),4
follow,4
INPUT_PULLUP);,4
results,4
opening,4
timing,4
\"\);\,4
special,4
upper,4
voltage,4
button_enabled,4
\time,\,4
\moved,\,4
C2,4
during,4
amount,4
active,4
feedback,4
\sensor,\,4
help,4
equal,4
\O_WRITE,\,4
pattern,4
capacity,4
iostreams,4
\occurs,\,4
\serial,\,4
\interval,\,4
\O_READ,\,4
Serial,4
40,4
second),3
fail;,3
<www.dis.ulpgc.es>,3
A7,3
missing,3
\variables,\,3
driver,3
'e',3
USE_SERIAL_FOR_STD_OUT,3
Computacional,3
EOF,3
boards,3
rail,3
b,3
V2,3
'a',3
connect,3
shifter,3
everything,3
//write,3
fstream,3
statement,3
2.0,3
\Sprint(F("\\t\,3
(pixels,3
//i2c,3
\LDR's,\,3
//flash,3
suppress,3
developed,3
microseconds,3
restore,3
detach,3
types,3
break,3
\once,\,3
\output,\,3
handshake,3
interface,3
These,3
right,3
A5,3
\Sprintln(F("\Read\,3
moved,3
Base,3
press,3
y_pos_LSB,3
\month,\,3
(abs(text_colour_hue),3
functon,3
mega3_ready,3
\fails,\,3
another,3
beta++),3
57600,3
\3"\));\,3
\11,\,3
Make,3
read_buffer[11],3
\partition,\,3
require,3
presume,3
led_strip.current_brightness),3
digitalWrite,3
Teensy,3
(COPYING,3
change_interval,3
Error,3
found,3
delay(20);,3
write_frame(address);,3
Sprintln(analogRead(LDR.pin2));,3
Timer,3
read_buffer[12],3
insert,3
negatives,3
Oceanografía,3
Dominguez-Brito,3
remove,3
chipSelectPin,3
reading2;,3
temp1,3
16];,3
\2,\,3
mode),3
Warning:,3
Date:,3
Entry,3
(external_sd_card_initialised,3
2);,3
\"\New\,3
\external_sd_card.errorExit("\external_sd_card.chdir"\);\,3
\12,\,3
determined,3
i2c_scanner();,3
usable,3
\used,\,3
A3,3
this_frame,3
likely,3
File:,3
execute,3
FAT12/FAT16,3
screens,3
Sistemas,3
postion,3
name[0],3
wrong,3
ArduinoInStream,3
arrive,3
serial_enabled,3
In,3
Wave,3
xy,3
implements,3
\delay,\,3
//call,3
append,3
pushing,3
//frame,3
MS-DOS,3
warning,3
E6,3
5000),3
else{,3
periodically,3
unmodified,3
100,3
how,3
accessed,3
generally,3
//},3
displaying,3
request,3
Fat,3
uint32_t,3
uint8_t),3
Departamento,3
Characters,3
millis(),3
probably,3
Mode,3
\[0,59]\,3
\digitalWrite(led_strip.pin,\,3
led_stable_interval,3
Value,3
*/,3
because,3
Informática,3
A1,3
blank,3
read_buffer[beta,3
'../..',3
cpplint,3
existing,3
ensure,3
//variable,3
Brito,3
promt,3
point,3
block),3
..,3
true),3
's'),3
256);,3
use_hue,3
min,3
detect,3
commands,3
\i2c"\));\,3
\interrupt,\,3
track,3
bether,3
allocate,3
'\n',3
lots,3
Spain,3
apps,3
compare,3
\detected"\));\,3
corrupt,3
División,3
\i2c,\,3
ENDL_CALLS_FLUSH,3
\SdBaseFile::open(SdBaseFile*,\,3
offset);,3
\them,\,3
64,3
9600,3
\16,\,3
Controller,3
Leonardo,3
mega2_ready,3
them,3
\internal_sd_card.errorExit("\internal_sd_card.chdir"\);\,3
occur,3
LEONARDO_SOFT_SPI,3
Robótica,3
readDir(),3
read_buffer[13],3
Allow,3
did,3
A4,3
\readings"\));\,3
indicates,3
internal_sd_card_initialised,3
\sensors,\,3
istream,3
reading2,3
better,3
Domínguez,3
read_buffer[10],3
reading1;,3
Author:,3
provide,3
center,3
they,3
tested,3
\Sprintln(F("\Warning,\,3
255;,3
4096,3
n-1,3
ios,3
led_strip.current_brightness);,3
\FAT,\,3
String,3
Sprintln,3
x_pos_LSB,3
//read,3
(read,3
looking,3
begin,3
ROC-SIANI,3
\cards,\,3
begins,3
specifically,3
100;,3
high/low,3
\TC_GetStatus(TC2,\,3
Note,3
1200,3
\applicable,\,3
hex,3
following,3
19200,3
corresponding,3
frame;,3
reason,3
i2c_enabled,3
public,3
ifstream,3
meter,3
No,3
Delimiter,3
never,3
logical,3
true/false,3
scanner,3
read(),3
\*str,\,3
checked,3
colour,3
7;,3
read_buffer[9],3
covered,3
//do,3
SdFile::sync(),3
put,3
<www.ulpgc.es>,3
KB,3
@class,3
items,3
End,3
elements,3
//int,3
retrun,3
Minimum,3
monitor,3
finished,3
fans_enabled,3
//return,3
operations,3
every,3
partial,3
LDR's,3
\items,\,3
previously,3
hidden,3
formatting,3
A0,3
MOSI,3
Fatblock,3
reading1,3
remaining,3
components,3
\input,\,3
comms,3
\pins,\,3
indicator,3
direction,3
circular,3
restricted,3
warnings,3
59,3
registers,3
reads,3
//print,3
necessary,3
extraction,3
(beta,3
care,3
Description:,3
usually,3
0X55,3
(led_strip.target_brightness,3
eofbit,3
(n,3
application,3
might,3
this:,3
read_buffer[8],3
repeat,3
(pin);,3
<www.roc.siani.es>,3
count);,3
different,3
\char*,\,3
individual,3
being,3
\good,\,3
handling,3
(pin,3
A2,3
on/off,3
(ULPGC),3
A6,3
hard,2
ios::trunc,2
\buffer,\,2
declare,2
channel,2
path);,2
renamed,2
erased,2
vol,2
domain,2
CORE_TEENSY,2
(!internal_sd_card.chdir(int_dir)),2
whole,2
\info,\,2
ethernet_connected,2
listas,2
chipset,2
2GB,2
peripherals,2
chars,2
mega4_ready,2
size),2
untilend,2
destructor,2
(+/-32738,2
usable),2
consider,2
Maximum,2
recent,2
depending,2
updates,2
dateTime,2
pre-erased,2
rmdir(),2
CMD0,2
\reading"\));\,2
\ios::beg,\,2
init_ethernet();,2
//sensor,2
//this,2
higher,2
shorter,2
recently,2
Text_cursor,2
converting,2
beta;,2
Timer1.attachInterrupt(fade_led_strip);,2
init_LDR();,2
//failed,2
overrun,2
\correctly,\,2
\inserted,\,2
initialized,2
ASCII,2
TD,2
\sending,\,2
\ifstream,\,2
1536,2
\root-------"\);\,2
\"\this\,2
vol);,2
To,2
dir);,2
*sd_int_file2,2
*sd_int_file3,2
OS,2
granularity,2
subtracting,2
frame.frame_buffer[alpha];,2
recommended,2
indefinitely,2
provides,2
27),2
target=current,2
\date,\,2
ohterwise,2
\found,\,2
SdVolume::init(Sd2Card*,2
initializer,2
master,2
\another,\,2
strlen(text_str),2
whether,2
presented,2
\27,\,2
32;,2
fixing,2
//ISR,2
executable,2
requested,2
order,2
pgm,2
init_current_meter();,2
open(SdBaseFile*,2
methodology,2
13;,2
test_i2c,2
Timer3.start();,2
\SD,\,2
sectorsPerFat32,2
E0,2
\2"\));\,2
SET_WR_BLK_ERASE_COUNT,2
lrd,2
\go,\,2
\difference,\,2
reciever,2
ios_base,2
\response,\,2
dynamically,2
<<,2
updating,2
//interrupt,2
Amount,2
degrees,2
locations,2
again,2
128;,2
temp2,2
3rd,2
//greater,2
\more_bytes,\,2
beyond,2
fstream::open(),2
Optional,2
\moment,\,2
\update_button_ISR,\,2
\initialized,\,2
Combine,2
DT,2
Slave,2
frame_length,2
autotoggle,2
Configuration_H,2
(abs(reading1,2
(val,2
guarantee,2
\*ext_file,\,2
stamp,2
closed,2
interpretation,2
definitions,2
enable_LDR,2
bounds,2
uint16_t*,2
\"\change_interval"\\,2
rgb,2
theres,2
combination,2
void*,2
maintains,2
enable_temp_sensor,2
much,2
Digital,2
4+2*offset,2
be:,2
\existent,\,2
leasat,2
data;,2
combining,2
New,2
ge,2
\Sprintln(F("\interrupt\,2
E5,2
enter,2
\Typically,\,2
Wait,2
Input,2
@},2
words,2
\sensor_prefix,\,2
\numbers,\,2
\6,\,2
occupied,2
fans_set_freq();,2
disp_string,2
internet,2
F2,2
frame.checksum;,2
\shield,\,2
\bus,\,2
------internal_sd_card,2
yes,2
avoided,2
stall,2
card),2
On,2
string',2
letters,2
file2,2
50us,2
logic,2
\[0,23]\,2
DigitalPin,2
COMS_SPEED,2
@defgroup,2
(read_buffer[7],2
enable_sd_cards,2
eg,2
room,2
enable_current_meter,2
I,2
confirm,2
temps,2
send_pos_now,2
ethernet,2
controller,2
optimized,2
nonnegative,2
\instruction,\,2
cycle,2
SPI_CLOCK_DIV128,2
incoming,2
wire,2
\frames"\));\,2
failes,2
routines,2
\startup,\,2
13h,2
Stop,2
\18ms,\,2
Partition,2
(80);,2
init_fans();,2
\invalid,\,2
front,2
arrays,2
stupidly,2
keywords,2
\Sprintln(F("\Attached\,2
Call,2
Fan_Struct,2
previous,2
E4,2
prepare,2
Means,2
Due_Pins_H,2
Sets,2
Encoder_Struct,2
dalay,2
easier,2
\so,\,2
UART,2
busy,2
keep,2
printable,2
cylinder,2
(or,2
(default,2
read/write,2
\"\ledstable_interval"\\,2
Cards,2
send_pos_frame(2);,2
escape,2
Compare,2
14400,2
linearly,2
\Record,\,2
member,2
maloc,2
Vars_H,2
generates,2
truncation,2
SD2,2
startup_time,2
relavent,2
(directory,2
bgnBlock,2
\ready,\,2
Modify,2
lower,2
built,2
May,2
DueTimer.h,2
HREF,2
reduce,2
passwords,2
duration,2
temp3;,2
htis,2
prototypes,2
isnt,2
\"\\,2
login,2
\"\Networks.BIN"\;\,2
2048,2
receiver,2
<A,2
log,2
\2048,\,2
pulses/2,2
\*ext_dir,\,2
\large,\,2
//value,2
audio,2
len,2
unattended,2
send_pos_frame(3);,2
passed,2
potientially,2
integer;,2
repersent,2
y_pos_dir,2
http://www.microsoft.com/whdc/system/platform/firmware/fatgen.mspx,2
frameNum;,2
backward,2
enable_wifi,2
versions,2
0xF8,2
B,2
init_led_strip();,2
outside,2
style,2
//number,2
37,2
Deprecated,2
pulses,2
multiply,2
\pinMode(pin,\,2
\external_sd_card.errorExit("\error\,2
9;,2
5(safe,2
carriage,2
Related,2
\:"\));\,2
Button_Struct,2
('.');,2
(led_strip.current_brightness,2
CS,2
Sd,2
advance,2
Assumes,2
generated,2
long),2
+-,2
\toggle,\,2
print(),2
\frame_type,\,2
send_frame..,2
43,2
'\t')),2
partitionTable,2
file2.close();,2
\read,\,2
Servo,2
\completed"\));\,2
\4,\,2
Unbuffered,2
\7,\,2
recursive,2
NOTIFIER;,2
\send,\,2
\media,\,2
\codes,\,2
necessicarily,2
\Serial.println(F("\Failed\,2
init_serial();,2
Receiver,2
emergency,2
*sd_ext_file2,2
LDR,2
E1,2
\150,\,2
ie,2
SIGN2,2
images,2
mega_last_sent_time,2
28/7/17),2
//led,2
ground,2
consuming,2
\DO,\,2
oflag);,2
'data',2
(!timers.fan_timer_attached,2
(!Serial),2
\modes,\,2
pointing,2
'l',2
(probably,2
Each,2
Timer2,2
places;,2
Serial.print(__FILE__);Serial.println(__LINE__),2
frequently,2
numFrames;,2
\instructions,\,2
hint,2
\recieved,\,2
#else,2
0X29,2
frame.frame_buffer[frame.frame_buffer[0],2
init_temp_sensors();,2
init_serial(int,2
\FAT16,\,2
adding,2
meaning,2
excess,2
value),2
digits,2
write_frame(int,2
Pin's,2
raw;,2
//after,2
src,2
\March,\,2
recalculate,2
yyyy-mm-dd,2
cacheSync(),2
wrapper,2
'keyword',2
declarations,2
+/-,2
\now,\,2
parsed,2
discard,2
settings,2
pFlag,2
led_strip_set_freq();,2
speed);,2
\finished,\,2
user's,2
\minute,\,2
wiring,2
\strips,\,2
white,2
proceedure,2
set_pos_update_frequency(pos_update_freq);,2
V1.0,2
taken,2
wave,2
\value),\,2
hh:mm:ss,2
overwritten,2
initialiser,2
polynomial,2
writted,2
works,2
releasing,2
integer,2
Transmitter),2
\"\NEWTEX~1.TXT"\\,2
Append;,2
\disparity,\,2
displayable,2
\Sprintln(F("\\,2
45,2
\network,\,2
'disp_string:,2
independant,2
heads,2
Implementation,2
operator,2
_________,2
\0X72,\,2
temp3,2
half,2
data',2
avg;,2
\message,\,2
(0-256),2
\Sprint("\\t\,2
Led_Strip_Struct,2
dateTimeCallback(),2
number),2
FAT12_SUPPORT,2
notifier,2
n),2
unit,2
flags_,2
milliseconds,2
simply,2
O_READ,2
Variables,2
send_pos_frame(1);,2
etc),2
\(ok),\,2
\problem...,\,2
existence,2
\word,\,2
//debug,2
nonexecutable,2
0xF8-0xFF,2
\wifi),\,2
newValue),2
boolean,2
ios::end,2
1.x,2
timestamp,2
\registers,\,2
reading_to_amps(raw);,2
\password,\,2
idle,2
entry's,2
60,2
vary,2
extracted),2
fail(),2
One,2
(the,2
crc,2
CLK,2
encoder;,2
(,2
'or,2
ones,2
caller,2
masterBootRecord,2
init_sd_cards();,2
routine,2
skips,2
forces,2
comms_delay,2
//send_frame..,2
ethernet/wifi,2
dictates,2
//use,2
References,2
/*,2
become,2
least,2
made,2
Sectors,2
libraries,2
\par,2
//alpha,2
Same,2
//error,2
CountOfClusters,2
printSlash,2
-100,2
fills,2
\Sprintln("\Error\,2
44,2
yet,2
\extracted,\,2
MEGA_SOFT_SPI,2
40;,2
password..,2
'/',2
wire1,2
stalls,2
significantly,2
'1',2
6;,2
27);,2
\Amps"\));\,2
whereby,2
//calc,2
\peiodically,\,2
random,2
mirror,2
Record,2
//get,2
ATSAM3X8E,2
(bit,2
F3,2
STOP_TRANSMISSION,2
\value..."\));\,2
external_sd_card.ls();,2
initializing,2
relevent,2
@details,2
Spi,2
X86,2
initialisation,2
running,2
\down,\,2
\Klaus,\,2
continue,2
nb:,2
\update,\,2
write_bl_len,2
Change,2
\covered,\,2
Network),2
typedef,2
sucessive,2
V,2
cofigure,2
(!external_sd_card.chdir(ext_dir)),2
'w',2
\32,\,2
(delim,2
due_class,2
42,2
internal_sd_card.ls();,2
39,2
(-2);,2
private:,2
initialisations,2
regions,2
safety,2
paces;,2
Insert,2
determination,2
Due_Interrupts_H,2
https://tkkrlab.nl/wiki/Arduino_KY-015_Temperature_and_humidity_sensor_module,2
0x00,2
'0,2
fading,2
\States,\,2
\count,\,2
Manufacturer,2
\fstream,\,2
set_cwd,2
Prefix,2
Due_Class_CPP,2
\[1,31]\,2
occured,2
Packed,2
seperated,2
cwd,2
enable_ethernet,2
Here,2
included,2
internal_sd_card.chvol();,2
post,2
1-63,2
United,2
enable_encoder,2
micro-controller,2
Due_Class_H,2
Parent,2
defined(DEBUG),2
//shouldnt,2
Atmel,2
button.button_pressed,2
\functions,\,2
38,2
'r',2
legal,2
35,2
\readings,\,2
\5,\,2
\wiring"\));\,2
implemented,2
Links,2
Ivan,2
functionality,2
illegal,2
service,2
register),2
bits;,2
led_strip.change_increment;,2
\changes,\,2
checks,2
Timer2.start();,2
Check,2
identifies,2
\internal_sd_card.errorExit("\error\,2
Floppy,2
clean_loop,2
extra,2
oct,2
code:,2
x_pos_dir,2
building,2
Philipp,2
Problem,2
Cylinder-head-sector,2
(serial,2
\Gomes,\,2
seekSet(),2
scientific,2
0-4:,2
\("\Current\,2
ID,2
read_temp_sensor,2
totalSectors32,2
alpha);,2
(offset,2
\default,\,2
PIN,2
//test,2
Disable,2
OCR,2
\Document.txt"\\,2
Erase,2
\0x80,\,2
led_fast_interrupt,2
Initializes,2
\properly"\));\,2
//data,2
\period,\,2
latency,2
\screen,\,2
(LDR.LDR2_enable,2
\10,\,2
\Sprintln("\error\,2
stops,2
enable_button,2
\made,\,2
encoder.clean_loop,2
//stops,2
\str,\,2
V1.1,2
\occured,\,2
functional,2
show,2
\seconds,\,2
issuing,2
maintained,2
party,2
anything,2
___________,2
0-3,2
distinguish,2
enable_serial,2
Contains,2
0-1023,2
//init,2
\disk,\,2
programming,2
origin,2
pos_frame_length,2
faster,2
close(),2
typically,2
Rename,2
doing,2
sd_card1_detected,2
position)/32,2
dint,2
0-255,2
\1024,\,2
MHz,2
link,2
big,2
allocation,2
Asynchronous,2
str_len;,2
de-pressed,2
digital,2
CMD8,2
directoryEntry,2
\loop"\\,2
accomplish,2
reformat,2
public:,2
led_strip_enabled){,2
\V1,\,2
led_strip;,2
\"\init\,2
kbit/sec,2
bitmap,2
\happens,\,2
unformatted,2
file/directory,2
(in,2
visible,2
\"\function_declarations.h"\\,2
Due's,2
\program"\);\,2
fully,2
(30);,2
recognise,2
O_RDWR,2
rounded,2
\array,\,2
this),2
Created,2
send_pos_frame(4);,2
\ios::cur,\,2
\0xFFFFFFFF,\,2
CSR,2
Colour,2
123,2
config,2
\loops,\,2
reading;,2
endBlock,2
calibration,2
delimiter,2
encoder_moved),2
//methods,2
file1,2
wifi_connected,2
\Sprintln(F("\colon\,2
\0X52,\,2
prompt),2
led_strip.target_brightness),2
interrutps),2
sd_card2_detected,2
send_all_pos_now();,2
looping,2
modifying,2
pos_update_freq,2
ever,2
\below,\,2
Define,2
accepted,2
whereas,2
LDR_check_value();,2
Hardware,2
//current,2
fan_speed,2
Released,2
Size,2
SAM3X,2
Name,2
'1,2
(test,2
t,2
Copy,2
(byte_number,2
truncated,2
\bool,\,2
stay,2
Meter,2
increase,2
grater,2
trying,2
fileSize,2
\path,\,2
(function,2
awesome,2
applications,2
\detection,\,2
cleared,2
cpp,2
i=0;,2
\x^16,x^12,x^5,x^1\,2
anyway,2
3000),2
\[1,12]\,2
sign_coms,2
uppercase,2
https://github.com/antodom/soft_uart,2
\struct,\,2
goto,2
fan;,2
prefix's,2
cylinder-head-sector,2
33,2
clarity,2
Timer3.attachInterrupt(send_pos_interrupt);,2
TEXT_COLOUR_HUE_MSB_PREFIX,2
Mask,2
syncing,2
SoftSPI,2
matrix..,2
\details,\,2
External,2
pulsing,2
mid,2
Wire.write,2
58,2
Timer1.start();,2
enable_led_strip,2
identification,2
0-4,2
cacheFetch,2
\files,\,2
\',\,2
deal,2
(nonremovable),2
calc,2
copying,2
'keyword:,2
\22nd,\,2
\Sprintln(F("\WARNING:\,2
\*int_file,\,2
boots,2
'o',2
optional,2
issue,2
\disabled,\,2
\volume,\,2
jump,2
Modified,2
\512,\,2
quotient,2
hold,2
Changes,2
Template,2
@file,2
\MSB,\,2
dst,2
5+2*offset,2
Indicates,2
implmented,2
Sprintln(alpha);,2
2011,2
\signal,\,2
here:,2
indent,2
\network"\;\,2
callbacks,2
overload,2
uint16_t,2
F_CPU/2,2
\attached"\));\,2
Low,2
communication,2
------external_sd_card,2
button.clean_loop,2
\num,\,2
humidity-bit,2
TODO,2
\send_specific_calibration_data(to_mega_prefix_array[alpha],\,2
86-based,2
standardised,2
positve,2
waits,2
instructions,2
helps,2
\1),\,2
scope,2
led_strip.change_increment,2
FATs,2
Optionally,2
\something,\,2
41,2
knob,2
INT,2
seems,2
\approach,\,2
makes,2
Interface,2
(encoder.clean_loop),2
corruption,2
Timer2.attachInterrupt(fade_fans);,2
fraction,2
accurate,2
's',2
\64,\,2
@{,2
Timers,2
basis,2
(for,2
method,2
Seidel,2
dat[],2
\"\clean\,2
stop();,2
\speed,\,2
choose,2
dates,2
34,2
Path,2
Code,2
generalise,2
\8,\,2
key,2
hader,2
mega1_ready,2
i<strlen(dummy_frame);i++){,2
button.last_button_pressed,2
Sign_coms_H,2
HW,2
attatch,2
\type,\,2
binary,2
SIGN1,2
\MBR,\,2
enable_fans,2
spi,2
//store,2
positional,2
\[1980,2107]\,2
shine,2
1023)),2
get_text_colour_hue(int,2
.,2
36,2
Sprintln(analogRead(LDR.pin1));,2
driven,2
\0X00,\,2
failbit,2
CRC_CCITT,2
(Universal,2
Blank,2
Address,2
hould,2
problematic,2
(write,2
odd,2
Out,2
3.0,2
decrease,2
ample,2
x_pos_dir;,2
\="\);\,2
Determine,2
(!timers.led_strip_timer_attached,2
split,2
fans_enabled){,2
*sd_ext_file3,2
Edit,2
sensor),2
init_wifi();,2
endTransmission(),2
Chain,1
\wifi..."\));\,1
!digitalRead(mega3_ready_pin);,1
recenter,1
DueTimer::callbacks[8]();,1
SdInfo_h,1
16000000UL,1
setings,1
\[3],\,1
Sd2Card.h,1
(1,1
rename,1
text_colour_hue_LSB,1
frame[150];,1
mode2:,1
\average,\,1
SEND_IF_COND,1
trans-,1
endCylinderHigh,1
\file1.read(buf,\,1
Industries</A>,1
\"\Due_Class.h"\\,1
\header"\));\,1
Reset,1
\"\http://www.ladyada.net/make/waveshield/"\>\,1
writeData(),1
sizeof(buf));,1
due_class::extract_network_data(),1
49,1
get_frame_code();,1
sign_coms::stop(),1
K7,1
mennu,1
compiler,1
timed,1
middle,1
errorHalt_P(PSTR(msg)),1
5000,1
—,1
noshowpoint,1
WRITE_MULTIPLE_BLOCKS,1
why),1
\likewise,\,1
//ethernet_connect..,1
STOP_TRAN_TOKEN,1
Sd2Card_h,1
!digitalRead(notifier));,1
mode??,1
rotating,1
(read_buffer[6],1
//returns,1
connection,1
false),1
1.00,1
//Fan_Struct,1
text;,1
lights,1
Coms_CPP,1
/128,1
4],1
backup,1
-----------------------------------------------------------------------------,1
\individually,\,1
Catch,1
T,1
text_colour_g,1
(byte)frame.frame_buffer[i,1
current.raw_reading_1,1
due_class::init_due(),1
stop),1
\digits,\,1
due_class::read_temp_data,1
2)),1
pin1,1
//find,1
Timer1,1
\strip..."\));\,1
(enable_temp_sensor),1
DIR_ATT_,1
iover,1
H0,1
Prevent,1
ArduinoStream_h,1
Timer.getAvailable,1
frame_offset);,1
\meter..."\));\,1
\Sprint("\Error:\,1
//sample,1
TIMER_CLOCK4,1
due_class::send_all_pos(),1
|=,1
SD_string.Password[beta],1
fan_speed;,1
(Register,1
(god,1
frame.frame_buffer[10],1
saves,1
Coms_i2c_H,1
K1,1
provided,1
//while(1)..,1
TC_CMR_TCCLKS_TIMER_CLOCK4,1
due_class::calc_offset(),1
PREFIX_RANGE,1
second/2,1
)),1
!digitalRead(mega2_ready_pin);,1
\code),\,1
1/16,1
\write_P(PGM_P),\,1
relay,1
init_i2c_mega(int,1
toggle_fan();,1
due_class::LDR_check_value(),1
specifying,1
23:59:58,1
current2;,1
write(str),1
Based,1
that:,1
14;,1
i2c_scanner(i);,1
USE_SOFTWARE_SPI,1
bit-bang,1
Day,1
\friends,\,1
\pos,\,1
Ogle,1
01/01/1980,1
't',1
due_init(),1
pack_xy_coordinates(),1
init_i2c(int,1
Shield</A>,1
O_IN,1
Sprintln(i);,1
SdFatUtil_h,1
fan_target_speed,1
\digitalWrite(due_ready_pin,\,1
activated,1
errorData(),1
\year,\,1
wifi:,1
\RX_PIN_4,\,1
due_class::read_current_meter(int,1
Actually,1
70:,1
due_class::string_length(),1
(CID,1
helpers,1
(Connected),1
\signed,\,1
blocksPerCluster_,1
TIMER_CLOCK3,1
(enable_encoder),1
searches,1
protected,1
dependant,1
\characteristics,\,1
L4,1
regarding,1
\as:"\));\,1
E7,1
frame_offset),1
toggle_led(int,1
newline,1
Cluster,1
epoch,1
J1,1
arduino_due;,1
\forum),\,1
CONNECTED_PREFIX,1
due_class::writeFanSpeed(int,1
folders,1
(digitalRead(button.button_pin),1
F_CPU/2^(1,1
unused,1
F_CPU/3,1
mega(s),1
text_colour_b;,1
Serial.println(mega1_ready);,1
scanned,1
due_enabled,1
bgnCluster,1
HIGH),1
Zero-based,1
CCW,1
internal_sd_card;,1
130:,1
rewrites,1
(!mega_enabled[3]),1
shields,1
\ios::ate,\,1
(is,1
Halt,1
TC6_Handler(void);,1
ueful,1
CRC7,1
400,1
x/X,1
//select,1
ERASE_WR_BLK_END,1
0X,1
\January,\,1
\cards"\));\,1
K4,1
\recentered"\));\,1
funtion,1
Pick,1
62,1
read_current_meter(int,1
mode3:,1
\success"\));\,1
\90,\,1
frame_offset,1
oldPath,1
cwd_,1
USING_SERVO_LIB,1
parsing,1
\80,\,1
\"\NEWFOL~1"\\,1
(abs(LDR.min_reading1,1
0x0040;,1
(0,1
Class,1
mega3_updated,1
multiplied,1
while(1),1
type(),1
record/play,1
Cant,1
pos_update_freq;,1
\//housekeeping,\,1
1-2,1
letter>:,1
\serial_tc5_declaration(RX_BUF_LENGTH,TX_BUF_LENGTH);\,1
\external_sd_card.errorExit("\external_sd_card.mkdir"\);\,1
recorded,1
Industries:,1
terminated,1
\pinMode(notifier,\,1
Limit,1
sign_coms::i2c_scanner(),1
reasonable,1
poll_temperature_sensor,1
terminate,1
//convert,1
O_TRUNC)),1
//copy,1
\encoder,\,1
future,1
('%');,1
frame.num_frames);,1
V1,1
record,1
TEMP1;,1
\button,\,1
Graphics_CPP,1
dname,1
Openmode,1
\18,\,1
\1..."\));\,1
\"\timer\,1
\(RX_MODE,\,1
\comments,\,1
insures,1
\external_sd_card.initError("\internal_sd_card:"\);\,1
squeeze,1
due_class::init_temp_sensors(),1
0-199,1
//temp,1
createContiguous(SdBaseFile*,1
archive,1
formatter,1
arduino-1.5.2/hardware/arduino/sam/system/CMSIS/Device/ATMEL/sam3xa/include/sam3x8e.h,1
contained,1
groups,1
vailid,1
effect,1
\implemented"\)\,1
\Serial.println(F("\Init\,1
Frame{,1
TC5_Handler(void){,1
328,1
SEND_CSD,1
led_on,1
//verification,1
fragmented,1
Transmission,1
sign_coms::init_serial();,1
500,1
H3,1
12),1
button.button_press_interval),1
throttle,1
caller's,1
marked,1
\meter"\));\,1
dateTimeCallback(,1
Sprint(reading1);,1
initErrorHalt_P(PSTR(msg)),1
corrupted,1
=8;,1
//implement,1
//ensure,1
document:,1
plus,1
1/4,1
\60,\,1
550,1
//folder,1
\sd_ext_dir,\,1
Connected=true;,1
Strip,1
\"\Define\,1
Timer1.setPeriod(led_strip.change_interval*1000);,1
\"\TOFIND.TXT"\\,1
yhe,1
(more_bytes,1
text_str[150],1
\encoder"\));\,1
Sprint(SD_string.str_sd[beta]);,1
(frame_type,1
//small,1
When,1
due_class::read_temp_sensor,1
RDR,1
Adapters,1
-100),1
additional,1
\"\INTERNAL"\;\,1
\rotating,\,1
defined(__AVR_ATmega1280__),1
\Transfer\n"\);\,1
second;,1
//generate,1
fat16lib@sbcglobal.net,1
\"\Coms.h"\\,1
possibly,1
-rf,1
HardwareSerial,1
\40,\,1
temp2_enable,1
due_class::temp_read_sensor(int,1
//provide,1
4800,1
Arduono,1
(reading2,1
in_header();,1
(read_buffer[14],1
buf[BUF_DIM];,1
(40);,1
dirEntry(dir_t*,1
USE_NATIVE_SAM3X_SPI,1
Last,1
verifying,1
\TX_PIN_1,\,1
algorithms,1
text_cursor;,1
initError(msg),1
digitalPin,1
//repeat,1
'P',1
\70,\,1
beginCylinderLow,1
blocksPerCluster,1
\modify,\,1
\22,\,1
Serial_1.write(frame.frame_buffer[i]);,1
red,1
Specification,1
_,1
\"\;\,1
\wifi,\,1
noskipws,1
frame.frame_buffer[7],1
32738),1
H4,1
gfx,1
class),1
strncpy_P,1
fifo.h,1
\protocol"\\,1
L2,1
((frame.num_frames,1
TC7_Handler(void);,1
31:,1
pstr(),1
implent,1
active;,1
readDir(dir_t*,1
Sprintln(str_len);,1
peripheral,1
//LSB,1
defined(__AVR_ATmega2560__),1
pinALast;,1
humidity3,1
opposed,1
onboard,1
adjustfield,1
\TX_PIN_4,\,1
\contiguous,\,1
26),1
spiRate),1
unknown,1
lesser,1
set_temp_sensor_disable(int,1
Timer0;,1
//calibrate,1
SCL1,1
sign_coms::init_i2c();,1
(CRC_ON_OFF),1
rediculous,1
am,1
respond,1
inline,1
(!mega_enabled[1]),1
divisor,1
due_class::pack_xy_coordinates(),1
dirty,1
How,1
word),1
tests,1
Writes,1
generate_checksum();,1
boolalpha,1
Led_Strip_Class_CPP,1
mega1_failed_frame_number,1
utility,1
sbrk,1
(7,1
screen_brightness;,1
\ready"\));\,1
PIN_A;,1
transmitting,1
stream),1
frameNum++;,1
Coms_I2C_CPP,1
DueTimer::callbacks[6]();,1
Graphics_H,1
Led,1
170:,1
':'),1
dec,1
-2),1
needs,1
(!DUE_ENABLED){,1
scaling,1
Moral:,1
button.clean_loop),1
(sd_file_read_buffer[23],1
navigate,1
Timer0.start();,1
\bgnBlock,\,1
strcmp_P,1
mega1_updated,1
$,1
http://www.arduino.cc/,1
L3,1
thanks,1
leave,1
\write,\,1
fade_led_strip(),1
SD_Cards_H,1
pre-erase,1
read_buffer[23],1
compatible,1
\110,\,1
4-bit,1
clearer,1
endl,1
Serial.println();,1
0x2000;,1
\button"\));\,1
//delay(500);,1
x_pos_MSB;,1
while(1)..,1
SD_string.str_sd.reserve(150);,1
(unless,1
\Serial.println("\Button\,1
tollerances,1
hardcoded,1
(button.button_pin,1
filesize,1
hence,1
disply,1
//interrrupt,1
NB,1
ERASE_WR_BLK_START,1
\0X41,\,1
(Timer/Counter),1
48,1
value);,1
47,1
'led_strip_set_freq':,1
CMD13,1
Serial_2.write(frame.frame_buffer[i]);,1
flaw,1
Timer7(7);,1
reduces,1
14],1
read_buffer[18],1
Serial_2.begin(,1
SdFile::write,1
180:,1
\RX_PIN_1,\,1
Otherwise,1
readStop(),1
(implementation,1
\interrupt"\);\,1
\ambient,\,1
\Sprintln(F("\One\,1
due_class::send_specific_calibration_data(byte,1
Hz,1
CMD24,1
4-6,1
\access,\,1
attach_timer_fan(){,1
(encoder.encoder_moved,1
\8th,\,1
current1;,1
(read_buffer[15],1
totalSectors16,1
buffers,1
t;,1
led_gradual_pulse(int,1
SdLevel.png,1
anymore,1
\61,\,1
handle_interrupts();,1
edge,1
inserts,1
Cache,1
SdStream_h,1
bootSignature,1
inserter,1
invalidate,1
1-12,1
http://www.atmel.com/dyn/resources/prod_documents/doc8161.pdf,1
mega_var3.address,1
PMC,1
alloc,1
internet.check_connection();,1
Sprint(analogRead(LDR.pin1));,1
Specifications,1
Using,1
\frame_sent,\,1
Flushes,1
(enable_led_strip),1
Timer7;,1
\tool:"\));\,1
Example:,1
J0,1
//wifi_connect...,1
portnote,1
230(allows,1
SD/SDHC,1
SdBaseFile_h,1
sign_coms::init_i2c(int,1
TEMP2),1
fileSize_,1
attach_timer_pos_update(){,1
gnu,1
pull,1
Raw,1
recorder,1
//reset,1
9-15:,1
depends,1
(read_buffer[23],1
due_class::wire_write_frame(int,1
black,1
frame_buffer[32];,1
//promt,1
\WORK,\,1
OK,1
minimal,1
<CENTER>Copyright,1
\Linux,\,1
listings,1
init_button(),1
Fix,1
FAN_DEFAULT_SPEED;,1
stimmer,1
stable,1
Temp_sensor{,1
darkness,1
FAT_DATE,1
4];,1
(F_CPU/64),1
Internet_CPP,1
pin3,1
pin2,1
80:,1
YYYYMMDD,1
Large,1
due_class::set_address(),1
\"\/DIR"\\,1
last_button_pressed,1
\//Serial.println(F("\Calc\,1
\pinMode(SD2_CS,\,1
Double,1
seeks,1
\higher"\));\,1
\write(uint8_t),\,1
frame.frame_buffer[6],1
CMD17,1
basically,1
(*dateTime)(uint16_t*,1
shipped,1
0XE5,1
Done,1
T_WRITE,1
frame.this_frame),1
sign/base,1
\Copying"\);\,1
test4,1
Initializing,1
log_temp_to_sd();,1
SPI_PUSHR_CTAS,1
internet_class,1
Sprintln(file2.fileSize());,1
str_len),1
SdFatConfig_h,1
recenter_encoder();,1
Sprint(current.current_reading_1);,1
\cursor,\,1
3-7,1
allowed:,1
51,1
humidity2,1
300;,1
SD_string.str_sd,1
Management,1
structer,1
reserve,1
(!internal_sd_card.exists(sd_int_dir)),1
Old,1
Serial_str),1
//add,1
\Sprint(F("\Read\,1
contiguousRange(uint32_t*,1
led_strip_brightness,1
67,1
//empty,1
Hz),1
Bus,1
Clock,1
~,1
\values,\,1
\pinMode(due_ready_pin,\,1
SD_DETECTED_PREFIX,1
serial_write_frame(address);,1
\occur"\);\,1
endBlock);,1
40000,1
uinstd.h,1
led_strip_set_freq(),1
debugging,1
\pinMode(mega2_ready_pin,\,1
original,1
cur,1
colour;,1
L6,1
(!mega_enabled[address,1
(DEBUG),1
\"\Connected\,1
\here,\,1
SD1_ENABLE;,1
curPosition,1
recieving,1
\external_sd_card.initError("\external_sd_card:"\);\,1
\executed,\,1
'u',1
problems,1
\[0,6]\,1
21:,1
mirroring,1
UP,1
it's,1
Timers:,1
remove(SdBaseFile*,1
writeLedStrips(led_strip.target_brightness);,1
'w';,1
O_WRONLY,1
0);,1
skipping,1
//mode1:,1
//is,1
hws,1
avg,1
'N',1
\text,\,1
problem,1
global_variables.h,1
condition,1
68,1
temp_password[25];,1
\MSB/LSB,\,1
pack_xy_coordinates();,1
mega_var4.address,1
\exceeded,\,1
minimum_on,1
(LDR.LDR1_enable),1
eraseCount,1
\F_CPU/pow(2,\,1
states,1
\chipset"\));\,1
mega4_updated,1
\index),\,1
timers;,1
SRAM,1
SD1_CS,1
compile,1
frame.frame_buffer[11],1
\protocol,\,1
conversion,1
\connected,\,1
//sd,1
addreses,1
(millis()>mega_last_sent_time+2000){,1
'd'),1
due_class::is_default(),1
encoder.position,1
fat32_boot,1
\extracted),\,1
costs,1
WRITE_MULTIPLE_BLOCK,1
F(),1
mega4_failed_frame_number,1
sign_coms::toggle_debug(),1
sbi,1
temp_default,1
\SIGN2-------"\);\,1
layout,1
SD2_ENABLE;,1
\SIGN1-------"\);\,1
holding,1
F_CPU,1
Byte,1
true};,1
encoder_moved,1
\Serial.println(F("\Button\,1
Please,1
intialise,1
\interrupts"\));\,1
miss-positioned,1
firstBlock,1
attributes..,1
structs),1
i2c_scanner(int,1
Improves,1
MinimumSerial,1
procedure,1
Puts,1
\(1:SD_str,\,1
due.print_frame();,1
\Sprintln(F("\Error,\,1
delayMicroseconds(100000);,1
ios::binary,1
due_class::get_serial(),1
half_duplex_begin(),1
\"\Global_variables.h"\\,1
fix,1
read_buffer[7],1
due_class::pack_disp_string_frame(int,1
tokens,1
\index,\,1
28800,1
constructors,1
ATmega328,1
screen_mode=0;,1
counter,1
//due.calc_delay();,1
positioned,1
detectors,1
\ethernet,\,1
read_buffer[17],1
Increase,1
Volume,1
spec,1
temp_read_sensor(temp.pin1);,1
\9h,\,1
T_CREATE,1
\Timer0,..\,1
remove(),1
\initialise"\));\,1
file1;,1
nonrecoverable,1
frame_type,1
manual,1
\[1],\,1
Space,1
//position,1
//mode0:,1
8U2,1
factor,1
dev);,1
\{10,\,1
\{TC2,2,TC8_IRQn},\,1
fans.set_fan_speed();,1
T_ACCESS,1
DIR_ATT_LONG_NAME,1
0X41,1
\{TC1,2,TC5_IRQn},\,1
\pinMode(LDR.pin2,\,1
\(F("\LDR\,1
Timer::getAvailable(),1
widely,1
Hall,1
except,1
readsome(char,1
3.01,1
component,1
to_mega_prefix_array[],1
APP_CMD,1
write/modification,1
//adapted,1
early,1
dat3[5];,1
ocr,1
wire_write_frame(int,1
SDcard,1
times,1
m,1
E3,1
\with,\,1
green,1
\well,\,1
\pinMode(LDR.pin1,\,1
TIMER_CLOCK1,1
API,1
http://www.adafruit.com/,1
writeStop(),1
F_CPU/16,1
Comments,1
x_pos,1
MinimumSerial_h,1
MicroSD,1
frame.this_frame++;,1
wanted,1
//due.startup_handshake();,1
sells,1
2-second,1
writeLedStrips(int,1
sign_coms();,1
K0,1
Power,1
temp.dat1[i],1
stuff),1
pos_timer_attached,1
set_pos_speed(int,1
\transmission"\));\,1
CMD59,1
\attachInterrupt(digitalPinToInterrupt(button),\,1
supplied,1
Bit,1
encoder.center;,1
temp1;,1
scanner_test,1
or'ed,1
get_data();,1
\enabled"\));\,1
Input/Output,1
30:,1
\SdFile,\,1
\directories,\,1
temp_check_humidity(int,1
//build,1
READ_BL_LEN=512,1
byte),1
\worry,\,1
sign_coms;,1
//failing,1
endline,1
(byte)get_text_colour_hue(1);,1
set_temp_sensor_enable(int,1
separate,1
Nack_details,1
Timers{,1
strlen_P,1
K5,1
due_class::init_wifi(),1
sizeof(to_mega_prefix_array),1
goes,1
frame.frame_buffer[8],1
Layout,1
65525,1
(!LDR.LDR2_enable),1
third,1
lastBlock,1
configuring,1
set_LDR_enable(int,1
prints,1
\copy_sd_data(sd_ext_file,\,1
SD_SEND_OP_COMD,1
SPCR,1
Password,1
what,1
\LDR's"\));\,1
#,1
\millis"\);\,1
due_class::is_network(),1
Picks,1
(enable_LDR),1
text_size,1
Serial_3.write(frame.frame_buffer[i]);,1
byte_number);,1
\Sprint(F("\Failed\,1
\(file2.write(buf,\,1
Convert,1
frame.frame_buffer[i,1
\WaveRP,\,1
\Initialised"\));\,1
TEMP_PREFIX,1
\(!file2.open("\TEST2.BIN"\,\,1
directory's,1
aVal;,1
endCylinderLow,1
OBJECT_PREFIX,1
//for(int,1
template,1
\Serial,\,1
11;,1
\(12,\,1
Asignment,1
encoder.pressed();,1
overwrites,1
ONLY,1
test_i2c();,1
//all,1
length-text,1
Basil,1
(read_buffer[16],1
DigitalPin_h,1
\Otherwise,\,1
immediately,1
alternate,1
//oppose,1
fire,1
scroll,1
happening,1
actual,1
\mainpage,1
F_CPU/8,1
\connections"\));\,1
//due.stop();,1
defs,1
temp;,1
//initialiser,1
activates,1
OCR),1
(index,1
\end,\,1
head,1
ETHERNET_CONNECTED_PREFIX,1
manages,1
SEND_CID,1
uint8_t*,1
O_RDONLY,1
\SD_TRACE(m,\,1
remove_card_1();,1
ago,1
'f',1
(speed,1
current2,1
header,1
Timer3.setFrequency(freq);,1
floatfield,1
ignores,1
refreshed,1
\slot,\,1
\160,\,1
NOT,1
binary/text,1
soft_uart.cpp,1
update_text_location();,1
type_,1
Required,1
circuit,1
mk20dx128.h,1
Of,1
//actual,1
defined(USE_I2C_TO_MEGAS),1
expansion,1
O_APPEND,1
(sckRateID,1
\ldr,\,1
\pinMode(current.pin1,\,1
DEBUG;,1
baud_setting,1
1)),1
temp2;,1
itterations,1
\invalid"\));\,1
53,1
exact,1
32738,1
2:,1
Debug,1
2560,1
due_class::init_led_strip(),1
humdity,1
text_cursor.x_min,1
10),1
pack_disp_string_frame(int,1
startup_handshake();,1
chains,1
Timer5;,1
offset++;,1
entire,1
http://www.sdcard.org/developers/tech/sdcard/pls/simplified_specs,1
exception,1
clearing,1
Network,1
vendor,1
0-127,1
8;,1
50:,1
56,1
Association's,1
real-time,1
\encoder..."\));\,1
//void,1
(enable_ethernet),1
(sensor_prefix),1
generate,1
USE_SERIAL_TO_MEGAS,1
\Sprint(F("\Sending\,1
pgm_read_word,1
\ID,\,1
sizeof(buf);,1
get_serial();,1
calc_delay();,1
simplifies,1
matched:,1
tool,1
y_speed){,1
0X80,1
is_network();,1
frame.frame_buffer[4],1
\exist"\));\,1
text_colour_hue_MSB,1
4084,1
sample,1
(is_password()),1
)//&&,1
Try,1
TIMER_CLOCK2,1
errorCode(),1
microseconds),1
1000;,1
Interrupt,1
//extract,1
2400,1
mult-block,1
Bitts,1
\write(buf,\,1
sum,1
Failures,1
22:,1
due_class::send_pos_frame(int,1
32-byte,1
bufstream_h,1
ldrs,1
we're,1
`,1
mega_var2.address,1
\open(),\,1
address){,1
rise,1
bootloader,1
chipSelectPin),1
due_class::calc_delay(),1
GO_IDLE_STATE,1
Part,1
57,1
supply,1
tree,1
\given,\,1
OEM/Application,1
ignored,1
*int_dir),1
recenter_encoder(),1
'D',1
Temp_sensor,1
form:,1
codes,1
\Sprintln(F("\button\,1
conflict,1
beta++;,1
intPart,1
mapping,1
y_pos,1
Poll,1
default:,1
SD_Cards_CPP,1
trace,1
emulate,1
comms_delay;,1
USE_SAM3X_BUS_MATRIX_FIX,1
(LDR.LDR2_enable),1
changes,1
offset+5,1
100:,1
interrrupt,1
(send_pos_now){,1
SD_Strings,1
frame.frame_buffer[5],1
\sckRateID,\,1
displayed,1
fan_current_speed,1
SD\SDHC,1
Area,1
\x_speed,\,1
\found"\));\,1
toggle_fan(int,1
\{true,true,true,\,1
due_class::remove_card_1(),1
abs(ticks,1
mega_enabled[2],1
),1
CTAR0,1
(violates,1
TEXT_COLOUR_B_PREFIX,1
Lead,1
\damage"\));\,1
Interupts_H,1
[50];,1
74,1
FAN_PIN;,1
(enable_button),1
due_class::reading_to_amps(int,1
//speed,1
dispaly,1
x_speed+128;,1
\pinMode(SD1_CS,\,1
Recursively,1
0-59,1
F_CPU/128,1
due_class::set_LDR_disable(int,1
write(char,1
read_buffer[22],1
PSTR,1
\2..."\));\,1
Just,1
OVERHEAD,1
nonexistent,1
\device:"\));\,1
\average"\));\,1
Due_H,1
my,1
due_class::set_LDR_enable(int,1
\nbyte,\,1
frame_offset;,1
1/8,1
sign_coms::init_serial(),1
\pinMode(mega4_ready_pin,\,1
is_default();,1
(!LDR.LDR1_enable),1
send_all_pos();,1
time:,1
LDR_calibration();,1
button_pressed,1
//otherwise,1
LRD,1
TEXT_COLOUR_G_PREFIX,1
\Sprintln(F("\Error:\,1
due.stop();,1
too,1
send_all_text();,1
Speed,1
(enable_i2c),1
\Serial.println(F("\due\,1
send_pos_now=false;,1
DueTimer.cpp,1
read_buffer[67];,1
Mac,1
(int)current.current_reading_2,1
text_cursor.x++;,1
Serial_3=serial_tc7;,1
PGM_P,1
inits,1
encountered,1
Sprintln(fail);,1
runinng,1
\Sprintln("\Error,\,1
creationTime,1
expect,1
calc_offset();,1
16-bits,1
SD_Strings{,1
//time,1
mega_var1.address,1
\sucessfull"\));\,1
read_buffer[alpha],1
led_strip_brightness;,1
delimiters,1
SD2_CS,1
Serial_2=serial_tc6;,1
unitbuf,1
Sprintln(FreeRam());,1
cid,1
\utility,\,1
mode1:,1
(enable_serial),1
\presented"\);\,1
consumer,1
helper,1
return_led_brightness();,1
//acknowlege,1
wiht,1
length-offset+5,1
perform,1
@,1
noboolalpha,1
site:,1
ws(),1
caches,1
led_strip.target_brightness;,1
Duemilanove,1
\LDR's..."\));\,1
20),1
61:,1
file1.close();,1
X,1
byte_number),1
non-interrupt,1
menus,1
2010,1
fixed;,1
DIR_NAME_FREE,1
SD_string.Network[beta],1
check_for_SD_card_inserted(),1
funtions,1
Interrupt..,1
1-31,1
erase/remapping,1
skipws,1
Definition,1
\31,\,1
\1980,\,1
(in_header()),1
SdFat_h,1
Sprint(t);,1
G2,1
type:,1
F_CPU/6,1
ostream&,1
Card-Specific,1
functionallity,1
\Serial.println(F("\Error\,1
(!external_sd_card.mkdir(sd_ext_dir)),1
=7;,1
arduino,1
\setup..."\));\,1
frequency;,1
32),1
SOFT_UART_H,1
//due,1
29),1
ARDUINO,1
\entry,\,1
'E',1
quit,1
\30,\,1
//fast,1
autosync,1
Serial_4.begin(,1
12c,1
Timer3,1
'm',1
\fans..."\));\,1
Clockwise,1
(external_sd_card.begin(SD1_CS)),1
<-,1
%SdFat/examples,1
supress,1
(from,1
\read-only,\,1
K3,1
\meters,\,1
\attachInterrupt(button.button_pin,\,1
nack,1
\created,\,1
USART,1
Parenthesis,1
'\t'),1
file2.seekSet(alpha);,1
21),1
sign_coms::sign_coms(),1
target_brightness,1
capable,1
extract_network_data();,1
\TC_GetStatus(TC1,\,1
\EOF,\,1
*time,1
'set_pos_update_frequency':,1
spiInit,1
Tell,1
Specific,1
requests,1
hundredths),1
current1,1
manually,1
terminates,1
str_sd,1
processor,1
\read(),\,1
computed,1
unless,1
//Serial.begin(speed);,1
coding,1
writing),1
v,1
160:,1
input/output,1
\peripherals,\,1
Mighty,1
\Sprint(F("\Average\,1
RX_BUF_LENGTH,1
MAX,1
Usage,1
10:,1
DueTimer::callbacks[7]();,1
sign_coms::init_i2c_due(),1
\cards..."\));\,1
include:,1
\function,\,1
init_button();,1
optimize,1
\pinMode(current.pin2,\,1
READ_SINGLE_BLOCK,1
Version,1
//sum,1
\coordinate,\,1
HowTo,1
fan_minimum,1
SOFT_UART_BIT_RATE,1
text_colour_r,1
init(),1
\timestamps,\,1
USE_SERARATEFAT_CACHE,1
adapted,1
(CID),1
redirect,1
y_pos_LSB;,1
prefixes,1
\pinMode(led_strip.pin,\,1
\sd_int_file,\,1
??,1
representations,1
identical,1
runtime,1
result,1
worth,1
We're,1
\'\\r',\,1
600,1
light1,1
//Wire1.write(dummy_frame[i]);,1
deprecated,1
deletes,1
8-15,1
default),1
SdFat::setStdOut(Print*,1
FAT_TIME,1
Wire1.write(dummy_frame[i]);,1
registers:,1
num_frames,1
automatic,1
handlers,1
ostream_h,1
//update,1
LDR.min_reading1,1
fat32_fsinfo,1
uint32_t*,1
9-12,1
Unix/Linux,1
//while,1
compactability,1
sketch,1
74AHC125N,1
send_pos_frame(int,1
\error,\,1
print_frame();,1
TC,1
due_class::writeLedStrips(int,1
Add,1
mission,1
(encoder.encoder_moved),1
(byte)256,1
511,1
mega_class;,1
noted,1
//xy,1
Menu_H,1
\"\Config_Local.h"\\,1
Volumes,1
DEBUG,1
\(static,\,1
(!Connected,1
\="\123456789\,1
pack_disp_string_frame:,1
TEXT_SIZE_PREFIX,1
74LCX245,1
\:"\);\,1
(i,1
(test_i2c),1
(!external_sd_card.begin(SD1_CS)),1
read_temp_sensor(pin);,1
LOW),1
Sprint((char)frame.frame_buffer[alpha]);,1
'p',1
is_fan_on();,1
Definitions,1
\[0],\,1
adaruit,1
\[2],\,1
due_class::init_fans(),1
mbr,1
parts,1
\8-bit,\,1
union,1
fastPinMode,1
\<drive,1
Serial_1.begin(,1
(frame.frame_buffer[pos_frame_length,1
\pinMode(fan.fan_pin,\,1
noshowbase,1
selector,1
00:00:00,1
Struct,1
Wire1.endTransmission();,1
\Macs,\,1
sckRateID/2),1
\LiquidCrystal,\,1
\i2c..."\));\,1
//switch,1
Both,1
LDR.min_reading2),1
txData,1
partitions,1
0.0,1
\speed"\));\,1
3.3,1
options,1
returning,1
\100,\,1
//Encoder_Struct,1
Teensy++,1
attach_timer_interrupts(){,1
63,1
\Sprint(F("\Error\,1
\digitalWrite(13,!digitalRead(13));\,1
text_colour_g;,1
TC8_Handler(void);,1
//inlcude,1
x_min,1
attributes,1
reading_to_amps(int,1
Serial_1=serial_tc5;,1
SD_string.Password.remove(beta);,1
(!ready),1
\other,\,1
\120,\,1
mega_enabled[3],1
(internal_sd_card_initialised,1
dat1[5];,1
were,1
(strlen(text_str),1
Current_Control_H,1
Intro,1
(CSD,1
TEMP1),1
Head,1
rewrite,1
Nop,1
TEMP3),1
filename,1
(!internal_sd_card.mkdir(sd_int_dir)),1
</CENTER>,1
often,1
\hour,\,1
basefield,1
Can't,1
\sensor..."\));\,1
(button.button_pressed),1
//mode2:,1
formats,1
Timer8(8);,1
floating,1
due_class::LDR_calibration(),1
40:,1
Struct_H,1
54,1
fan_change_interval,1
First,1
LDR.max_reading2),1
10;,1
mega_enabled[0],1
0X0F,1
\(!file2.open(int_file,\,1
140:,1
incorrect,1
\Sprintln("\error,\,1
TC6_Handler(void){,1
temp_read_sensor,1
\defined,\,1
text_colour_b,1
//remaining,1
IC,1
controllers,1
Stores,1
screen_mode;,1
Active,1
reported,1
downloaded,1
build,1
ethernet_connect..,1
maxValue);,1
SoftSPI_h,1
\write(),\,1
Causes,1
readData(),1
seconds),1
1/2,1
\initialised,\,1
//declaration,1
\test6"\;\,1
*',1
\Serial.println(F("\sent\,1
//push,1
init_due();,1
sign_coms::init_i2c(),1
(abs(LDR.max_reading1,1
Integration,1
sizeof(read_buffer));,1
\initialise,\,1
run_i2c,1
Serial.begin(speed);,1
\strip"\));\,1
\Minutes,\,1
monitoring,1
seem,1
USE_I2C_TO_MEGAS,1
frame_type;,1
\reliable,\,1
O_AT_END,1
cannot,1
frame.this_frame,1
account,1
//calculate,1
Force,1
connectivity,1
mega4_failed_frame_type,1
\positions,\,1
READ_MULTIPLE_BLOCK,1
http://www.exploringbinary.com/category/numbers-in-computers/,1
\Hours,\,1
\[0,58]\,1
\chdir("\SUB"\)\,1
\FAT_DATE(year,\,1
SdFat::stdOut(),1
nack;,1
r2,1
!digitalRead(mega4_ready_pin);,1
Entries,1
//Led_Strip_Struct,1
*date,1
illustrate,1
allocated,1
mostly,1
L0,1
DueTimer::_frequency[NUM_TIMERS],1
2107,1
Due_Libraries_H,1
delay(50);,1
dubug,1
button;,1
\TX_PIN_2,\,1
USE_NATIVE_MK20DX128-SPI,1
button_press_interval,1
SPI_SR_RXCTR,1
->3),1
Encoder_Cpp,1
alias,1
due_class::send_disp_string_frame(int,1
Midnight,1
120:,1
cycles,1
\Serial.println(F("\Attaching\,1
i;,1
file/subdirectory,1
set_LDR_disable(int,1
\Serial.println(F("\Attach\,1
2.00,1
Sprint(current.current_reading_2);,1
//prompt,1
1.0,1
\50,\,1
minor,1
%SdFat/examples/SdFormatter,1
view,1
't'),1
use_button,1
State,1
\---------------------"\);\,1
\ever,\,1
others,1
copy_sd_data(const,1
\empty,\,1
mega3_failed_frame_number,1
set_LRD_enable,1
appropriate,1
major,1
0x10000),1
\brightness"\));\,1
update_button_ISR(),1
Fetch,1
\-1,\,1
length:,1
\setup,\,1
though,1
WILL,1
bugs,1
ls,1
//structer,1
\implemented,\,1
encoder.update_encoder_postion();,1
Menu_CPP,1
Experimental,1
colours,1
_____________,1
Serial_4=serial_tc8;,1
Length,1
bitmask,1
\TX_PIN_3,\,1
\(TX_MODE,\,1
LIGHT_PREFIX,1
frame.num_frames,1
CRLF,1
ticks,1
\dirFile.exists("\TOFIND.TXT"\)\,1
SdFile_h,1
regular,1
'x',1
\{TC2,1,TC7_IRQn},\,1
\(!file1.open(ext_file,\,1
literal,1
\{TC2,0,TC6_IRQn},\,1
WaveRP,1
3:,1
LED_STRIP;,1
K6,1
NUM_SCREENS;,1
\internal_sd_card.errorExit("\read2"\);\,1
send_disp_string_frame(int,1
Construct,1
SEND_STATUS,1
CRC_ON_OFF,1
11:,1
SdFatStructs_h,1
\Sprint(F("\string\,1
\meter,\,1
\button..."\));\,1
ios_h,1
adjustment,1
Sign_coms_serial_CPP,1
//clear,1
mega2_failed_frame_number,1
Access,1
isDir(),1
encoder.encoder_moved,1
complexity,1
1]),1
Serial.begin(115200);,1
1-4,1
('C');,1
SDA1,1
65,1
light2;,1
\fail(),\,1
fans.get_temperature();,1
calibrated,1
send_text_now,1
16;,1
//seperate,1
\0,2,3,4,5\,1
(!mega_enabled[0]),1
prescaler,1
lost,1
is_password();,1
fatgen103.doc,1
Pullups,1
verification,1
box,1
G1,1
\sign,\,1
(read_buffer[alpha],1
\RX_PIN_2,\,1
mini,1
aligns,1
SdFatTestSuite_h,1
//length,1
\#error("\function\,1
!digitalRead(mega1_ready_pin);,1
wish,1
calculated,1
DueTimer::callbacks[5]();,1
todo,1
\"\/"\,\,1
//pack,1
__ARM__,1
11-15:,1
scsRateID,1
\DEBUG,\,1
Uncomment,1
\folder"\\,1
\PCs,\,1
128);,1
115200;,1
due_class::init_LDR(),1
SerialPort,1
Configuration,1
current.current_reading_2,1
frame.num_frames;,1
\wifi"\));\,1
i));,1
set_pos_update_frequency(int,1
initialises,1
Second,1
Sprintln(avg);,1
\21,\,1
(1980-2107),1
error_check();,1
INTERRUPTS,1
y_speed+128;,1
Config_Local_h,1
Sprintln(sensor_prefix);,1
text_height,1
1/10,1
K2,1
//button,1
\monitor,\,1
sign_coms::init_serial(int,1
Represents,1
knows,1
sd2Card::init(uint8_t,1
\digitalWrite(SD2_CS,\,1
74HC4050N,1
WRITE_BLOCK,1
abs(text_cursor.y),1
due_class::send_all_calibration_data(int,1
//Timer3,1
(button.button_pressed,1
temp.dat3[i],1
disapear/default,1
115200),1
Fans_H,1
current.current_reading_1,1
\uart<TIMER,RX_BUFFER_LENGTH,TX_BUFFER_LENGTH>\,1
(!led_strip.fast_interval),1
*sd_ext_dir,1
text_colour_hue,1
speed),1
CURRENT_PREFIX,1
isFile(),1
funcions,1
PWM,1
note,1
IDE,1
*sd_int_file,1
near,1
Find,1
1);,1
card.init(SPI_HALF_SPEED),1
led_strip_timer_attached,1
report,1
mega_enabled[1],1
\delay"\));\,1
st,1
&copy;,1
file1.rewind();,1
IDentification,1
assign,1
impedance,1
Put,1
FatPos_t,1
due_class::init_current_meter(),1
PART_TYPE_,1
\megas"\));\,1
finish,1
sd_file_read_buffer[23],1
(reading,1
fan_timer_attached,1
buffering,1
\remove(),\,1
stage,1
looked,1
\block,\,1
\Pressed"\);\,1
frame.this_frame);//function,1
//pos,1
\nonzero,\,1
soon,1
0-29,1
final,1
get_address();,1
design,1
specifies,1
Encoder,1
volume),1
127,1
defined(UDR0),1
Sprintln(address);,1
\higher,\,1
costly,1
trivial,1
(2,1
fans_set_freq(){},1
\Sprint("\Sending\,1
temp_check_temp(int,1
(enable_fans),1
set_address();,1
series,1
Skip,1
avr,1
heap,1
SCREEN_BRIGHTNESS_PREFIX,1
BUF_DIM,1
handle_interrupts(),1
//shift,1
mode0:,1
visable,1
bright,1
disp.update_brightness();,1
mkdir(SdBaseFile*,1
efficiently,1
blue,1
divider,1
(always,1
//looking,1
establish,1
sd_int_dir);,1
attach_timer_led_strip(){,1
protection,1
webpage,1
partitioning,1
DDR,1
units,1
x_pos_LSB;,1
(as,1
\info"\));\,1
roughly,1
somewhere,1
dataStart,1
in:,1
SD's,1
(d->attributes,1
SdFile::close(),1
(!timers.led_strip_timer_attached){,1
calculation,1
\140,\,1
//Serial.println(mega1_ready);,1
(abs(text_cursor.x),1
\test60"\;\,1
(enable_wifi),1
//onboard,1
int8_t,1
approximate,1
encoder.clean_loop),1
return_fan_speed();,1
symbols,1
0X0E,1
\'"\')\,1
text_width,1
ENABLE_ERROR_CHECKING,1
beginCylinderHigh,1
due_class::init_sd_cards(),1
dateTime(uint16_t*,1
overwrite,1
//mode,1
vaule,1
waveform,1
//make,1
//open,1
SD_string;,1
\endcode,1
\PgmPrint("\\t\,1
FALLING);,1
toggle_debug();,1
pinA,1
Timer5(5);,1
send_all_calibration_data(int,1
10000,1
//once,1
WARNING:,1
is_led_on();,1
\170,\,1
//visual,1
seperately,1
fastest,1
\variable,\,1
numFrames,1
freq;,1
H6,1
(text_cursor.y,1
Serial_3.begin(,1
^,1
\130,\,1
ideally,1
sinusoidal_half_frequency,1
due_class::send_all_pos_now(){,1
dummy_frame[],1
Current_Control_CPP,1
Don't,1
'k'),1
Introduction,1
designed,1
Timer6(6);,1
covered),1
send_pos_interrupt(){,1
b),1
\led_strip,\,1
5-8:,1
nonfatal,1
(WHG,1
shown,1
\Sprintln(F("\Mega\,1
//complete,1
\Sprintln("\\,1
http://www.ladyada.net/make/waveshield/,1
http://www.sdcard.org/consumers/formatter/,1
newer,1
46,1
\password"\;\,1
\range,\,1
accessible,1
genreate,1
FIFO_H,1
arbitration,1
SdFatConfig.h,1
psu-10%,1
\Sprintln(F("\i2c\,1
potiential,1
Timer6;,1
250,1
\sensor"\));\,1
Uno,1
DO,1
\"\base_class.h"\\,1
//structure,1
\{-1,-1,-1,-1,-1,-1,-1,-1,-1};\,1
iostream_h,1
Bugs,1
SD_string.str_sd.remove(SD_string.str_sd.length());,1
(led_strip.fast_interval),1
\//Serial.println(F("\Pause\,1
Rotating,1
time),1
(mega1_ready,1
graphics,1
feature,1
therefore,1
comparison,1
\Serial.println(F("\Startup\,1
years,1
http://www.sdcard.org/developers/tech/sdcard/pls/Simplified_Physical_Layer_Spec.pdf,1
eof(),1
file2;,1
//startup,1
\sketch,\,1
fast_interval,1
rather,1
\mega"\));\,1
\//Serial.println(F("\megas\,1
read_current_meter(current.pin1);,1
H1,1
offset),1
init_encoder();,1
They,1
SanDisk,1
meags,1
Timer1.setPeriod(led_strip.led_stable_interval*1000);,1
55,1
daughter,1
\SdFormatter.pde,\,1
L5,1
disconnected,1
*sd_ext_file,1
LDR.max_reading2,1
0X00,1
\pinMode(mega1_ready_pin,\,1
humidity1,1
while(1){},1
After,1
125,1
\n,1
Timer8;,1
fan_pin,1
\"\EXTERNAL"\;\,1
println(),1
repond,1
(!mega_enabled[2]),1
reduced,1
\"\Due_Pins.h"\\,1
\Sprintln(F("\Pin\,1
recording,1
showbase,1
Led_Strip_Class_H,1
',1
\pinMode(13,\,1
LDR.min_reading2,1
\serial_tc6_declaration(RX_BUF_LENGTH,TX_BUF_LENGTH);\,1
(allows,1
\print(),\,1
500;,1
Memory,1
datasheet:,1
SPI_PUSHR_CONT,1
y_pos_MSB;,1
cards.check_for_sd_card_inserted();,1
read_buffer[19],1
CHANGE);,1
//alpha-offset-1,1
mega2_failed_frame_type,1
\"\/DIR/SUB"\\,1
fixes,1
very,1
\file2.read(read_buffer,\,1
\Sprintln(F("\Address\,1
0X1AA,1
\bounds,\,1
frequency):,1
year;,1
\0X61,\,1
buf[i],1
((int)current.current_reading_1,1
Applications,1
assumes,1
native,1
carry,1
TEXT_COLOUR_R_PREFIX,1
Any,1
structs,1
SdFatClass,1
writeFanSpeed(int,1
\fans,\,1
mega_enabled[4],1
testing,1
booting,1
misc,1
\2:Web_str,\,1
\"\due_structs.h"\\,1
change_increment,1
Coms_Serial,1
\serial_tc8_declaration(RX_BUF_LENGTH,TX_BUF_LENGTH);\,1
150:,1
Sends,1
listed,1
//toggle,1
synchronous,1
\Default,\,1
round(ticks));,1
(frame.this_frame,1
\dir,\,1
cause,1
UDR0,1
\pinMode(mega3_ready_pin,\,1
NAVIGATE_MENU_OPTIONS_OVER_USB_SERIAL,1
USE_HUE_PREFIX,1
further,1
eight,1
frame_buffer[5,1
Physical,1
\//frame_sent,\,1
\20,\,1
\RX_PIN_3,\,1
individually,1
TESTSUITE,1
(is_network()),1
4),1
Serial.print(m);Serial.println(b);,1
successfully,1
light1;,1
divide,1
linear,1
fan_change_increment,1
5-10:,1
necessarily,1
(frame.num_frames,1
\voltage,\,1
Sign_coms_serial_H,1
requires,1
Indicator,1
20:,1
inits:,1
document,1
protect,1
cheking,1
(is_default()),1
due_class::print_frame(),1
underflow,1
vol_,1
Month,1
(sd_cards_enabled),1
pgm_read_byte,1
//method,1
Cancel,1
communications,1
\Sprint(F("\sensor\,1
Windows/DOS,1
\Sprintln(F("\Can't\,1
showpoint,1
meant,1
templates,1
Jan,1
send_disp_string_frame(alpha);,1
CMD18,1
added):,1
rename(),1
510,1
#elif,1
90:,1
\dev,\,1
TC7_Handler(void){,1
TX_BUF_LENGTH,1
recursion,1
soft_uart.h,1
We,1
mode(),1
8-bits,1
instances,1
tenths,1
1/100,1
read(char,1
due_class;,1
LUT,1
expected,1
LED_STRIP_PREFIX,1
\data"\));\,1
\complete"\));\,1
text_colour_r;,1
enumerated,1
(byte)text_str[frame_offset,1
((sizeof(to_mega_prefix_array),1
firmware,1
CMD12,1
fjnd,1
delay(100);,1
\soul"\\,1
istream&,1
com,1
timestamp(),1
\writeln_P(PGM_P),\,1
alpha-offset-1,1
obj,1
\"\deleted"\\,1
fan_on,1
meters,1
enough,1
setSckRate(),1
12;,1
\0X55,\,1
\pack_disp_string_frame(type,\,1
(including,1
//direction,1
USE_ARDUINO_SPI_LIBRARY,1
(!led_strip.sinusoidal),1
mega2_updated,1
having,1
(!internal_sd_card.chdir(sd_int_dir)),1
Matrix,1
ERASE,1
Internet_H,1
Layer,1
\covered"\));\,1
\ground"\));\,1
Thanks,1
//verify,1
Remember,1
restored,1
((frame_offset,1
parallel,1
BUTTON_PIN;,1
due_class::init_ethernet(),1
READ_OCR,1
\"\http://www.adafruit.com/"\>\,1
ACMD41,1
\day,\,1
\serial_tc7_declaration(RX_BUF_LENGTH,TX_BUF_LENGTH);\,1
Select,1
\Sprintln(F("\encoder\,1
init_i2c();,1
CMD58,1
//Timer1,1
showpos,1
//buffer,1
CTAR1,1
read_buffer[21],1
\V2,\,1
(fail!=0),1
dividers,1
LDR.ambient,1
toggle_led();,1
pinB,1
follows,1
//funtion,1
WIFI,1
\instanciation,\,1
frame.frame_buffer[beta],1
\KillDisk,\,1
sign_coms::startup_handshake(),1
129;,1
User,1
\Directory"\));\,1
button_pin,1
for(int,1
mega4_ready),1
SdStreamBase,1
\"\\n"\\,1
light2,1
G0,1
F_CPU/4,1
\CR,\,1
smaller,1
3),1
DUE,1
tweet,1
//zero,1
(1);,1
168,1
stack,1
(enable_sd_cards),1
represent,1
TEMP2;,1
nouppercase,1
0X61,1
(.),1
\Sprintln("\WARNING:\,1
(!external_sd_card.chdir(sd_ext_dir)),1
RA,1
send_specific_calibration_data(byte,1
G5,1
\"\/DIR"\,\,1
\card"\));\,1
days,1
temp3_enable,1
lastWriteDate,1
(text_colour_hue,1
temp.dat2[i],1
bytesPerSector,1
Frame,1
//remove,1
recursively,1
word):,1
second);,1
\usable,\,1
\wrong,\,1
frame.frame_buffer[9],1
connecting,1
softSPI,1
SdBaseFile::printField(),1
Warning,1
Nack_details{,1
converted,1
creates,1
_frequency[timer],1
time));,1
H5,1
0x0080;,1
180};,1
\internal_sd_card.errorExit("\internal_sd_card.mkdir"\);\,1
gets,1
day);,1
fat_boot,1
pin_map_t,1
Simplified,1
pos_frame_length;,1
//initialisations,1
due_class::is_password(),1
//external,1
defined(USE_SERIAL_TO_MEGAS),1
piee,1
imidiately,1
unlikely,1
168/328,1
//init_i2c(0);,1
\minValue,\,1
sizeof(to_mega_prefix_array)),1
i];,1
fits,1
TC8_Handler(void){,1
Changed,1
______________,1
\[0,\,1
(text_cursor.x,1
(initialize,1
text_size;,1
writeFanSpeed(fan.fan_target_speed);,1
lowest,1
\pinMode(button.button_pin,\,1
temp_network[25];,1
openRoot(SdVolume*,1
\Sprintln(F("\Remove\,1
All,1
mega3_failed_frame_type,1
referenced,1
2000,1
F_CPU/32,1
external_sd_card;,1
Sprintln(reading2);,1
attempts,1
150;,1
from:,1
frame.this_frame;,1
\code,1
Wire1.beginTransmission(address);,1
notify,1
pin..,1
pointed,1
1.5,1
Serial_4.write(frame.frame_buffer[i]);,1
L7,1
screen_brightness,1
current.raw_reading_2,1
leonardo,1
SD_string.str_sd.remove(str_len);,1
SD_string.str_sd[beta],1
sign_coms::i2c_scanner(int,1
\Clock,\,1
transferred,1
reading:,1
O_TRUNC,1
FAN_PREFIX,1
66,1
update_display();,1
O_READ)),1
PORT,1
\deleted,\,1
Coms_H,1
cantrol,1
mode:,1
\ethernet..."\));\,1
\length,type,num\,1
chipSelect,1
dat2[5];,1
\class,\,1
due.send_all_text();,1
*sd_int_dir,1
Coms::write_frame(int,1
\too,\,1
documentation,1
\FAT_TIME(hour,\,1
creating,1
structured,1
approximately,1
enable_i2c,1
\Sprintln(F("\Baud\,1
(byte)get_text_colour_hue(2);,1
0-23,1
(internal_sd_card.begin(SD2_CS)),1
L1,1
110:,1
60:,1
DIR_ATT_LONG_NAME_MASK),1
object),1
-text.text_width*strlen(text_str)*2;,1
\"\Arduino.h"\\,1
(enable_current_meter),1
(4,1
locate,1
boundaries,1
tables,1
Also,1
temp1_enable,1
//define,1
52,1
July,1
PosCount,1
test5,1
\creation,\,1
namespace,1
updated,1
freq){,1
Useful,1
PIN_B;,1
Capacity,1
execution,1
\later,\,1
dirBlock,1
errorExit(msg),1
connected),1
TC5_Handler(void);,1
1/12,1
mega1_failed_frame_type,1
(!external_sd_card.exists(sd_ext_dir)),1
REMOVE,1
size:,1
external_sd_card.chvol();,1
istream_h,1
61,1
1980,1
\Serial"\));\,1
\SdFat,\,1
DUBUG_PREFIX,1
//mode3:,1
read_buffer[20],1
127;,1
freshly,1
*int_dir);,1
//in,1
due_class::copy_sd_data(const,1
FAT/FAT32,1
noshowpos,1
s,1
\timers,\,1
\responding"\));\,1
SD_string.Network.remove(beta);,1
due_class::send_all_text(),1
_tc_uart_;,1
slightly,1
experimental,1
email,1
1:,1
read_current_meter(current.pin2);,1
\ethernet"\));\,1
frequencies,1
due.init_due();,1
#error,1
\fans"\));\,1
attach_timer_interrupts();,1
fade_fans(),1
'rm,1
due_class::in_header(),1
examples,1
LDR.max_reading1,1
signed),1
\'.',\,1
frameNum,1
fault,1
Gravitech,1
csd,1
continuous,1
NB:,1
69,1
\parameters,\,1
due_class(),1
wifi_connect...,1
//period,1
current_brightness,1
FreeRam:,1
